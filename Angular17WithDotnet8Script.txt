================================
üí° Workshop Angular 17 with .NET 8  üí°
================================

‚ö° DAY 1

1: Installing tool MacOS and Windows
2: What new in Angular 17
3: Angular CLI 17.3.x
-------------------------------------------------------
üöÄ1. ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°
üíª .NET 8 SDK
---
dotnet --version

üíª Node JS 20.x and up
---
node -v
npm -v
ppx -v

üíª Angular 17 Cli
---
ng version

üíª PostgreSQL 15/16
---
psql --version

üíª Git
---
git version

üíª VSCode
---
code -v

üöÄ 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÅ‡∏£‡∏Å‡∏î‡πâ‡∏ß‡∏¢ Angular CLI 17.3.x ‡πÅ‡∏ö‡∏ö Standalone Component
---
üíª  ng new [project_name]
üíª  ng new myApp

‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤ VSCode ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ó‡πà‡πÜ
---
code myApp -r

‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÅ‡∏ö‡∏ö NgModules Component
---
ng new myApp --no-standalone

</> ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå
---
ng serve
‡∏´‡∏£‡∏∑‡∏≠
ng s
---
‡∏õ‡∏Å‡∏ï‡∏¥‡∏à‡∏∞‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà http://localhost:4200

‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ run ‡∏ó‡∏µ‡πà port ‡∏≠‡∏∑‡πà‡∏ô 
üíª ng serve  --port 4400

üöÄ 2. What new in Angular 17
---
- Support Typescript 5.2-4, No Missing Commas
- Build-In Control Flow
- View Transition API¬†
- Deferrable views
- Server Side Rendering and Hydration
- New lifecycle hooks
- Input value transforms & new input, output 
- New model with signal 2 way data binding 
- Upgrade ==> https://update.angular.io

-------------------------------------------------------
‚ö° DAY 2

4: Standalone Components & LifeCycle
5: Template Syntax
6: Data Binding & Directives
7: Services & Dependency Injection
8: Routing & Navigation
-------------------------------------------------------

Step 1: ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏Ç‡∏≠‡∏á Angular 17
‡πÅ‡∏ö‡∏ö Standalone Component
---
üíª ng new ng17app-demo

Step 2: ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤ vscod
---
üíª code ng17app-demo

Step 3: ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏£‡∏±‡∏ô‡∏î‡∏π‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö
---
ng s
‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡∏π‡∏ó‡∏µ‡πà‡πÄ‡∏ß‡πá‡∏ö
http://localhost:4200

Step 4: ‡∏™‡∏£‡πâ‡∏≤‡∏á component ‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏±‡∏ô‡πÄ‡∏ñ‡∏≠‡∏∞
---
ng g c home --skip-tests
ng g c about --skip-tests
ng g c contact --skip-tests
ng g c register --skip-tests
ng g c login --skip-tests
ng g c navbar --skip-tests
ng g c footer --skip-tests

Step 5: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á bootstrap 5.x ‡πÑ‡∏ß‡πâ‡∏ó‡∏≥‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á design ‡∏Å‡∏±‡∏ô‡∏ô‡∏∞
---
npm i bootstrap@5

Step 6: ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ Config ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Bootstrap ‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå angular.json
---
            "styles": [
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "src/styles.scss"
            ],
            "scripts": [
              "node_modules/bootstrap/dist/js/bootstrap.bundle.js"
            ]

Step 7: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Bootstrap ‡∏î‡∏π‡∏´‡∏ô‡πà‡∏≠‡∏¢ ‡πÑ‡∏õ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå navbar.component.html
---
<ul class="bg-success">
</ul>

Step 8: ‡∏£‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏π‡∏™‡∏¥
---
ng s

Step 9: ‡πÑ‡∏´‡∏ô‡∏•‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á google font ‡∏•‡∏á‡πÑ‡∏õ‡∏ã‡∏¥ ‡πÑ‡∏õ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå index.html
---
<link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+Thai:wght@100;200;300;400;500;600;700&display=swap" rel="stylesheet">

Step 10: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ font ‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå style.scss
---
body {
    padding: 0;
    margin: 0;
    font-family: "IBM Plex Sans Thai", sans-serif;
}

Step 11: ‡∏°‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á layout ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏ß‡πâ‡∏£‡∏ß‡∏°‡∏£‡πà‡∏≤‡∏á ‡πÄ‡∏°‡∏ô‡∏π ‡πÅ‡∏•‡∏∞‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
---
ng g c layouts/frontLayout

‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ layout ‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå front-layout.component.html
---
<app-navbar></app-navbar>
<router-outlet></router-outlet>
<app-footer></app-footer>

Step 12: ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô Routing ‡∏Å‡∏±‡∏ô‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤ ‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå app.routes.ts
---
import { Routes } from '@angular/router';
import { HomeComponent } from './home/home.component';
import { FrontLayoutComponent } from './layouts/front-layout/front-layout.component';

export const routes: Routes = [
    {
        path: '',
        component: FrontLayoutComponent,
        children: [
            {
                path: '',
                component: HomeComponent
            },
  }
];

Step 13: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå app.component.html
---
<router-outlet />

Step 14: ‡∏•‡∏≠‡∏á‡∏£‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏π
---
ng s

Step 15: ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á navbar.component.html 
---
<header class="p-3 text-bg-dark">
    <div class="container">
      <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">
        <a href="/" class="d-flex align-items-center mb-2 mb-lg-0 text-white text-decoration-none">
          <svg class="bi me-2" width="40" height="32" role="img" aria-label="Bootstrap"><use xlink:href="#bootstrap"></use></svg>
        </a>

        <ul class="nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0">
          <li><a href="#" class="nav-link px-2 text-secondary">Home</a></li>
          <li><a href="#" class="nav-link px-2 text-white">Features</a></li>
          <li><a href="#" class="nav-link px-2 text-white">Pricing</a></li>
          <li><a href="#" class="nav-link px-2 text-white">FAQs</a></li>
          <li><a href="#" class="nav-link px-2 text-white">About</a></li>
        </ul>

        <form class="col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3" role="search">
          <input type="search" class="form-control form-control-dark text-bg-dark" placeholder="Search..." aria-label="Search">
        </form>

        <div class="text-end">
          <button type="button" class="btn btn-outline-light me-2">Login</button>
          <button type="button" class="btn btn-warning">Sign-up</button>
        </div>
      </div>
    </div>
  </header>

Step 16: ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥ Validation form login
---
login.component.html
---
<div class="container mt-5 mb-5">
    <main class="form-signin w-25 m-auto">
        <form [formGroup]="loginForm">
            <div class="text-center">
                <img class="mb-4" src="xxx" alt="" width="72" height="57">
            </div>
            
            <h1 class="h3 mb-3 fw-normal text-center">Login</h1>
        
            <div class="form-floating mb-2">
                <input 
                    formControlName="email"
                    name="email"
                    type="email" 
                    class="form-control" 
                    id="floatingInput">
                <label for="floatingInput">Email</label>
                @if(submitted && loginForm.controls['email'].errors){
                    @if(loginForm.controls['email'].errors['required']){
                        <div class="text-danger my-2">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô email</div>
                    }
                    @if(loginForm.controls['email'].errors['email']){
                        <div class="text-danger my-2">‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö email ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</div>
                    }
                }
            </div>

            <div class="form-floating">
                <input 
                    formControlName="password"
                    name="password"
                    type="password" 
                    class="form-control" 
                    id="floatingPassword">
                <label for="floatingPassword">Password</label>
                @if(submitted && loginForm.controls['password'].errors){
                    @if(loginForm.controls['password'].errors['required']){
                        <div class="text-danger my-2">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô password</div>
                    }
                    @if(loginForm.controls['password'].errors['minlength']){
                        <div class="text-danger my-2">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£</div>
                    }
                }
            </div>
        
            <div class="form-check text-start my-3">
                <input class="form-check-input" type="checkbox" value="remember-me" id="flexCheckDefault">
                <label class="form-check-label" for="flexCheckDefault">
                Remember me
                </label>
            </div>

            <button 
                class="btn btn-primary w-100 py-2" 
                type="submit"
                (click)="submitLogin()"
                >Sign in
            </button>

            <button 
                class="btn btn-warning w-100 py-2 mt-2" 
                type="submit"
                (click)="resetForm()"
                >Reset
            </button>
            
            <!-- {{ userLogin.email }}
            {{ userLogin.password }} -->

        </form>
    </main>
</div>

login.component.ts
---
import { Component } from '@angular/core'
import { 
  ReactiveFormsModule, 
  FormsModule,
  FormGroup,
  FormBuilder,
  Validators
} from '@angular/forms'

@Component({
  selector: 'app-login',
  standalone: true,
  imports: [ReactiveFormsModule, FormsModule],
  templateUrl: './login.component.html',
  styleUrl: './login.component.scss'
})
export class LoginComponent {

  // FormGroup
  loginForm!: FormGroup
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÑ‡∏ß‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ submit form ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
  submitted = false

  // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°
  userLogin = {
    "email": "",
    "password": ""
  }

  // Constructor
  constructor(
    private formBuilder: FormBuilder
  ){
  }

  // ngOnInit
  ngOnInit(){
    this.loginForm = this.formBuilder.group({
      email: ['', [Validators.required, Validators.email]],
      password: ['', [Validators.required, Validators.minLength(6)]]
    })
  }

  submitLogin(){

    this.submitted = true

    // ‡∏ñ‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (Invalid)
    if(this.loginForm.invalid){
      return
    } else {
      this.userLogin.email = this.loginForm.value.email
      this.userLogin.password = this.loginForm.value.password

      if(this.userLogin.email == "admin@email.com" && this.userLogin.password == "123456"){
        alert("Login Success")
      } else {
        alert("Login Fail")
      }

    }
  }

  resetForm(){
    this.submitted = false
    this.loginForm.reset()
  }

}















